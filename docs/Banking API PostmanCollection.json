{
  "info": {
    "name": "Banking API Collection",
    "description": "–ü–æ–ª–Ω–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Banking API —Å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–µ–π —Ç–æ–∫–µ–Ω–æ–≤ –∏ –¥–∞–Ω–Ω—ã—Ö",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080",
      "type": "string"
    },
    {
      "key": "adminToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "cardId",
      "value": "",
      "type": "string"
    },
    {
      "key": "cardId2",
      "value": "",
      "type": "string"
    },
    {
      "key": "timestamp",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üìÅ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è (Auth)",
      "description": "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
      "item": [
        {
          "name": "üîê Register User - –£—Å–ø–µ—à–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "const timestamp = new Date().getTime();",
                  "pm.collectionVariables.set(\"timestamp\", timestamp);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"User registered successfully\", function() {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.text()).to.include(\"User registered successfully\");",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "userName",
                  "value": "testuser_{{timestamp}}",
                  "type": "text"
                },
                {
                  "key": "password",
                  "value": "password123",
                  "type": "text"
                },
                {
                  "key": "email",
                  "value": "test{{timestamp}}@example.com",
                  "type": "text"
                },
                {
                  "key": "fullName",
                  "value": "Test User {{timestamp}}",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            }
          },
          "response": []
        },
        {
          "name": "‚ö†Ô∏è Register User - –û—à–∏–±–∫–∞ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è username",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "userName",
                  "value": "admin",
                  "type": "text"
                },
                {
                  "key": "password",
                  "value": "password123",
                  "type": "text"
                },
                {
                  "key": "email",
                  "value": "admin@example.com",
                  "type": "text"
                },
                {
                  "key": "fullName",
                  "value": "Admin User",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            }
          },
          "response": []
        },
        {
          "name": "üîë Login User - –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Login successful\", function() {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.collectionVariables.set(\"userToken\", jsonData.token);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"testuser_{{timestamp}}\",\n    \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            }
          },
          "response": []
        },
        {
          "name": "üîë Login Admin - –í—Ö–æ–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Admin login successful\", function() {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.collectionVariables.set(\"adminToken\", jsonData.token);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"admin\",\n    \"password\": \"admin123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            }
          },
          "response": []
        },
        {
          "name": "‚ö†Ô∏è Login - –ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"nonexistentuser\",\n    \"password\": \"wrongpassword\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üìÅ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ (Users) - ADMIN ONLY",
      "description": "–û–ø–µ—Ä–∞—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ (—Ç—Ä–µ–±—É—é—Ç —Ä–æ–ª—å ADMIN)",
      "item": [
        {
          "name": "üë• Create User - –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (Admin)",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "const timestamp = new Date().getTime();",
                  "pm.collectionVariables.set(\"timestamp\", timestamp);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"User created successfully\", function() {",
                  "    pm.response.to.have.status(201);",
                  "    var jsonData = pm.response.json();",
                  "    pm.collectionVariables.set(\"userId\", jsonData.id);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"userName\": \"createduser_{{timestamp}}\",\n    \"password\": \"newpass123\",\n    \"email\": \"createduser{{timestamp}}@example.com\",\n    \"fullName\": \"Created Test User\",\n    \"role\": \"USER\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/user",
              "host": ["{{baseUrl}}"],
              "path": ["api", "user"]
            }
          },
          "response": []
        },
        {
          "name": "üìã Get All Users - –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/user?page=0&size=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "user"],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "üë§ Get User By ID - –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/user/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "user", "{{userId}}"]
            }
          },
          "response": []
        },
        {
          "name": "‚úèÔ∏è Update User - –û–±–Ω–æ–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "const timestamp = new Date().getTime();",
                  "pm.collectionVariables.set(\"timestamp\", timestamp);"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"userName\": \"updateduser_{{timestamp}}\",\n    \"password\": \"updatedpass123\",\n    \"email\": \"updated{{timestamp}}@example.com\",\n    \"fullName\": \"Updated Test User\",\n    \"role\": \"USER\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/user/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "user", "{{userId}}"]
            }
          },
          "response": []
        },
        {
          "name": "‚ö†Ô∏è Create User - –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"userName\": \"\",\n    \"password\": \"\",\n    \"email\": \"invalid-email\",\n    \"fullName\": \"\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/user",
              "host": ["{{baseUrl}}"],
              "path": ["api", "user"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üìÅ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–∞–º–∏ (Cards)",
      "description": "–û–ø–µ—Ä–∞—Ü–∏–∏ —Å –±–∞–Ω–∫–æ–≤—Å–∫–∏–º–∏ –∫–∞—Ä—Ç–∞–º–∏",
      "item": [
        {
          "name": "üí≥ Create Card - –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã (Admin)",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "const timestamp = new Date().getTime();",
                  "pm.collectionVariables.set(\"timestamp\", timestamp);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Card created successfully\", function() {",
                  "    pm.response.to.have.status(201);",
                  "    var jsonData = pm.response.json();",
                  "    pm.collectionVariables.set(\"cardId\", jsonData.id);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ownerName\": \"Card Owner {{timestamp}}\",\n    \"expiryDate\": \"2025-12-31\",\n    \"userId\": \"{{userId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/card",
              "host": ["{{baseUrl}}"],
              "path": ["api", "card"]
            }
          },
          "response": []
        },
        {
          "name": "üí≥ Create Second Card - –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ç–æ—Ä–æ–π –∫–∞—Ä—Ç—ã",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "const timestamp = new Date().getTime();",
                  "pm.collectionVariables.set(\"timestamp\", timestamp);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Second card created\", function() {",
                  "    pm.response.to.have.status(201);",
                  "    var jsonData = pm.response.json();",
                  "    pm.collectionVariables.set(\"cardId2\", jsonData.id);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ownerName\": \"Second Card {{timestamp}}\",\n    \"expiryDate\": \"2025-12-31\",\n    \"userId\": \"{{userId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/card",
              "host": ["{{baseUrl}}"],
              "path": ["api", "card"]
            }
          },
          "response": []
        },
        {
          "name": "üìã Get All Cards - –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∫–∞—Ä—Ç—ã (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/card?page=0&size=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "card"],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "üîç Get Card By ID - –ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É –ø–æ ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/card/{{cardId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "card", "{{cardId}}"]
            }
          },
          "response": []
        },
        {
          "name": "üîÑ Update Card Status - –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∫–∞—Ä—Ç—ã",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"status\": \"BLOCKED\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/card/{{cardId}}/status",
              "host": ["{{baseUrl}}"],
              "path": ["api", "card", "{{cardId}}", "status"]
            }
          },
          "response": []
        },
        {
          "name": "üë§ Get User Cards - –ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/card/my-cards",
              "host": ["{{baseUrl}}"],
              "path": ["api", "card", "my-cards"]
            }
          },
          "response": []
        },
        {
          "name": "üí∞ Get Card Balance - –ü–æ–ª—É—á–∏—Ç—å –±–∞–ª–∞–Ω—Å –∫–∞—Ä—Ç—ã",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/card/{{cardId}}/balance",
              "host": ["{{baseUrl}}"],
              "path": ["api", "card", "{{cardId}}", "balance"]
            }
          },
          "response": []
        },
        {
          "name": "‚ö†Ô∏è Create Card - –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ownerName\": \"\",\n    \"expiryDate\": \"2020-01-01\",\n    \"userId\": \"999999\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/card",
              "host": ["{{baseUrl}}"],
              "path": ["api", "card"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üìÅ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (Transactions)",
      "description": "–û–ø–µ—Ä–∞—Ü–∏–∏ –ø–µ—Ä–µ–≤–æ–¥–∞ –¥–µ–Ω–µ–≥ –º–µ–∂–¥—É –∫–∞—Ä—Ç–∞–º–∏",
      "item": [
        {
          "name": "üí∏ Transfer Money - –ü–µ—Ä–µ–≤–æ–¥ –¥–µ–Ω–µ–≥",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"fromCardId\": \"{{cardId}}\",\n    \"toCardId\": \"{{cardId2}}\",\n    \"amount\": 100.00\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/transaction/transfer",
              "host": ["{{baseUrl}}"],
              "path": ["api", "transaction", "transfer"]
            }
          },
          "response": []
        },
        {
          "name": "‚ö†Ô∏è Transfer - –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞ –Ω–∞ —Ç—É –∂–µ –∫–∞—Ä—Ç—É",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"fromCardId\": \"{{cardId}}\",\n    \"toCardId\": \"{{cardId}}\",\n    \"amount\": 50.00\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/transaction/transfer",
              "host": ["{{baseUrl}}"],
              "path": ["api", "transaction", "transfer"]
            }
          },
          "response": []
        },
        {
          "name": "‚ö†Ô∏è Transfer - –ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –∫–∞—Ä—Ç–∞",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"fromCardId\": \"999999\",\n    \"toCardId\": \"{{cardId2}}\",\n    \"amount\": 100.00\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/transaction/transfer",
              "host": ["{{baseUrl}}"],
              "path": ["api", "transaction", "transfer"]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "exec": [
          "// Global pre-request script for timestamp generation",
          "if (!pm.collectionVariables.get(\"timestamp\")) {",
          "    const timestamp = new Date().getTime();",
          "    pm.collectionVariables.set(\"timestamp\", timestamp);",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "exec": [
          "// Global test script for common assertions",
          "pm.test(\"Status code is 200\", function () {",
          "    pm.response.to.have.status(200);",
          "});"
        ]
      }
    }
  ],
  "auth": null,
  "protocolProfileBehavior": {}
}